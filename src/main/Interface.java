package main;

import javax.swing.JComboBox;
import javax.swing.SwingWorker;

public class Interface extends javax.swing.JFrame {

    public int fromIndex;
    public int toIndex;
    SwingWorker sw;

    public Interface() {
        initComponents();
        this.setLocation(300, 200);//window position
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        amount = new javax.swing.JTextArea();
        inputCombo = new javax.swing.JComboBox<>();
        inputField = new javax.swing.JTextField();
        outputCombo = new javax.swing.JComboBox<>();
        convert = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        amount.setColumns(20);
        amount.setRows(5);
        jScrollPane1.setViewportView(amount);

        inputCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BAM", "EURO", "USD", "BRL" }));
        inputCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                inputComboItemStateChanged(evt);
            }
        });
        inputCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputComboActionPerformed(evt);
            }
        });

        inputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldActionPerformed(evt);
            }
        });

        outputCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BAM", "EURO", "USD", "BRL" }));
        outputCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputComboActionPerformed(evt);
            }
        });

        convert.setText("CONVERT");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        jLabel1.setText("Insert amount");

        jLabel2.setText("from");

        jLabel3.setText("to");

        jLabel4.setText("Amount");

        jLabel5.setText("Click to conert");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(294, 294, 294))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel1)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(inputCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(outputCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(61, 61, 61)
                                        .addComponent(convert, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(105, 105, 105)
                                        .addComponent(jLabel5)
                                        .addGap(15, 15, 15))))
                            .addComponent(jScrollPane1))))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(convert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputComboActionPerformed
        fromIndex = ((JComboBox) evt.getSource()).getSelectedIndex();//given item index from inputCombo
    }//GEN-LAST:event_inputComboActionPerformed

    private void inputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFieldActionPerformed

    }//GEN-LAST:event_inputFieldActionPerformed

    private void inputComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_inputComboItemStateChanged

    }//GEN-LAST:event_inputComboItemStateChanged

    private void outputComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputComboActionPerformed
        toIndex = ((JComboBox) evt.getSource()).getSelectedIndex();//given item index from outputCombo
    }//GEN-LAST:event_outputComboActionPerformed
//Convert button pressed
    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
       
        sw = new SwingWorker() {//swing thread class instance
            @Override
            protected Object doInBackground() throws Exception {
                switch (fromIndex) {
                    case 0://inputCombo= BAM
                        switch (toIndex) {
                            case 0://outputCombo= BAM
                                double i = Double.parseDouble(inputField.getText());
                                double sum = i * 1.0;
                                amount.setText(i+ " BAM = " +String.valueOf(sum)+ " BAM");
                                break;
                            case 1://outputCombo= EURO
                                double i1 = Double.parseDouble(inputField.getText());
                                double sum1 = i1 * 0.51129;
                                amount.setText(i1+ " BAM = " +String.valueOf(sum1)+ " EURO");
                                break;
                            case 2://outputCombo= USD
                                double i2 = Double.parseDouble(inputField.getText());
                                double sum2 = i2 *  0.607256;
                                amount.setText(i2+ " BAM = " +String.valueOf(sum2)+ " USD");
                                break;
                            case 3://outputCombo= BRL
                                double i3 = Double.parseDouble(inputField.getText());
                                double sum3 = i3 *  0.607256;// u usd
                                double sum4 = sum3 *  5.52803820;//u brl
                                amount.setText(i3+ " BAM = " +String.valueOf(sum4)+ " BRL");
                                break;
                            default:
                                amount.setText("");
                        }
                    break;
                    case 1://inputCombo= EURO
                        switch (toIndex) { 
                            case 0://outputCombo= BAM  
                                double i = Double.parseDouble(inputField.getText());
                                double sum = i * 1.95583;
                                amount.setText(i+ " EURO = " +String.valueOf(sum)+ " BAM");
                                break;
                            case 1://outputCombo= EURO
                                double i1 = Double.parseDouble(inputField.getText());
                                double sum1 = i1 * 1.0;
                                amount.setText(i1+ " EURO = " +String.valueOf(sum1)+ " EURO");
                                break;
                            case 2://outputCombo= USD
                                double i2 = Double.parseDouble(inputField.getText());
                                double sum2 = i2 *  1.18744;
                                amount.setText(i2+ " EURO = " +String.valueOf(sum2)+ " USD");
                                break;
                            case 3://outputCombo= BRL
                                double i3 = Double.parseDouble(inputField.getText());
                                double sum3 = i3 *  6.55832317;
                                amount.setText(i3+ " EURO = " +String.valueOf(sum3)+ " BRL");
                                break;
                            default:
                                amount.setText("");
                        }
                    break;
                    case 2://inputCombo= USD
                        switch (toIndex) { 
                            case 0://outputCombo= BAM  
                                double i = Double.parseDouble(inputField.getText());
                                double sum = i * 1.64774;
                                amount.setText(i+ " USD = " +String.valueOf(sum)+ " BAM");
                                break;
                            case 1://outputCombo= EURO
                                double i1 = Double.parseDouble(inputField.getText());
                                double sum1 = i1 * 0.842145;
                                amount.setText(i1+ " USD = " +String.valueOf(sum1)+ " EURO");
                                break;
                            case 2://outputCombo= USD
                                double i2 = Double.parseDouble(inputField.getText());
                                double sum2 = i2 *  1.0;
                                amount.setText(i2+ " USD = " +String.valueOf(sum2)+ " USD");
                                break;
                            case 3://outputCombo= BRL
                                double i3 = Double.parseDouble(inputField.getText());
                                double sum3 = i3 * 5.52803820;
                                amount.setText(i3+ " USD = " +String.valueOf(sum3)+ " BRL");
                                break;
                            default:
                                amount.setText("");
                        }
                    break;
                    case 3://inputCombo= BRL
                        switch (toIndex) { 
                            case 0://outputCombo= BAM  
                                double i = Double.parseDouble(inputField.getText());
                                double sum = i *  0.180896;//u USD
                                double sum4 = sum * 1.64774 ;
                                amount.setText(i+ " BRL = " +String.valueOf(sum4)+ " BAM");
                                break;
                            case 1://outputCombo= EURO
                                double i1 = Double.parseDouble(inputField.getText());
                                double sum1 = i1 * 0.152478 ;
                                amount.setText(i1+ " BRL = " +String.valueOf(sum1)+ " EURO");
                                break;
                            case 2://outputCombo= USD
                                double i2 = Double.parseDouble(inputField.getText());
                                double sum2 = i2 * 0.180896;
                                amount.setText(i2+ " BRL = " +String.valueOf(sum2)+ " USD");
                                break;
                            case 3://outputCombo= BRL
                                double i3 = Double.parseDouble(inputField.getText());
                                double sum3 = i3 * 1.0;
                                amount.setText(i3+ " BRL = " +String.valueOf(sum3)+ " BRL");
                                break;
                            default:
                                amount.setText("");
                                break;
                        }
                    break;
                    default:
                        amount.setText("");
                        break;
                }
                return null;
            }
        };
        sw.execute();//izvršavanje niti
    }//GEN-LAST:event_convertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea amount;
    private javax.swing.JButton convert;
    private javax.swing.JComboBox<String> inputCombo;
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> outputCombo;
    // End of variables declaration//GEN-END:variables
}
